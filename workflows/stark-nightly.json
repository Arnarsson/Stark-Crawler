{
  "name": "STARK Product Crawler Pipeline",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 2,
              "triggerAtMinute": 30
            }
          ]
        }
      },
      "id": "e8c9d6f5-1234-4567-8901-234567890abc",
      "name": "Daily at 2:30 AM",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "content": "## Starting STARK Crawler\n\nTime: {{$now.format('YYYY-MM-DD HH:mm:ss')}}\n\nInitiating product data collection from STARK sitemaps...",
        "options": {}
      },
      "id": "a1b2c3d4-5678-90ab-cdef-1234567890ab",
      "name": "Log Start",
      "type": "n8n-nodes-base.markdown",
      "typeVersion": 1,
      "position": [450, 300]
    },
    {
      "parameters": {
        "command": "cd /app/stark-crawler && npm run crawl",
        "options": {
          "env": {
            "SUPABASE_URL": "={{$credentials.supabase.url}}",
            "SUPABASE_KEY": "={{$credentials.supabase.serviceKey}}",
            "LOG_LEVEL": "info",
            "CRAWLER_CONCURRENCY": "2",
            "CRAWLER_HEADLESS": "true"
          }
        }
      },
      "id": "b2c3d4e5-6789-0abc-def1-234567890abc",
      "name": "Run Crawler",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [650, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  COUNT(*) FILTER (WHERE first_seen_at > NOW() - INTERVAL '24 hours') as new_products,\n  COUNT(*) FILTER (WHERE updated_at > NOW() - INTERVAL '24 hours' AND first_seen_at < NOW() - INTERVAL '24 hours') as updated_products,\n  COUNT(*) as total_products,\n  MAX(last_seen_at) as last_crawl\nFROM stark_products;",
        "options": {}
      },
      "id": "c3d4e5f6-7890-abcd-ef12-34567890abcd",
      "name": "Get Statistics",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [850, 300],
      "credentials": {
        "postgres": {
          "id": "postgres-supabase",
          "name": "Supabase DB"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.new_products + $json.updated_products}}",
              "operation": "larger",
              "value2": 0
            }
          ]
        }
      },
      "id": "d4e5f678-90ab-cdef-1234-567890abcdef",
      "name": "Any Changes?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1050, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  sku,\n  ean,\n  name,\n  price_numeric,\n  in_stock,\n  url,\n  CASE \n    WHEN first_seen_at > NOW() - INTERVAL '24 hours' THEN 'NEW'\n    ELSE 'UPDATED'\n  END as status\nFROM stark_products\nWHERE last_seen_at > NOW() - INTERVAL '24 hours'\nORDER BY last_seen_at DESC\nLIMIT 50;",
        "options": {}
      },
      "id": "e5f67890-abcd-ef12-3456-7890abcdef12",
      "name": "Get Changed Products",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [1250, 240],
      "credentials": {
        "postgres": {
          "id": "postgres-supabase",
          "name": "Supabase DB"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$credentials.slack.webhookUrl}}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "🔍 *STARK Crawler Report*\n\n📊 *Statistics:*\n• New Products: {{$node['Get Statistics'].json.new_products}}\n• Updated Products: {{$node['Get Statistics'].json.updated_products}}\n• Total Products: {{$node['Get Statistics'].json.total_products}}\n\n🕐 Last Crawl: {{$node['Get Statistics'].json.last_crawl}}\n\n_View details in Supabase dashboard_"
            }
          ]
        },
        "options": {}
      },
      "id": "f6789012-bcde-f123-4567-890abcdef123",
      "name": "Send Slack Notification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1450, 240],
      "credentials": {
        "httpHeaderAuth": {
          "id": "slack-webhook",
          "name": "Slack Webhook"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Export changed products to CSV format\nCOPY (\n  SELECT \n    sku,\n    ean,\n    name,\n    price_numeric,\n    category,\n    in_stock,\n    url,\n    last_seen_at\n  FROM stark_products\n  WHERE last_seen_at > NOW() - INTERVAL '24 hours'\n  ORDER BY last_seen_at DESC\n) TO '/tmp/stark_changes_{{$now.format('YYYYMMDD')}}.csv' \nWITH (FORMAT CSV, HEADER);",
        "options": {}
      },
      "id": "g7890123-cdef-1234-5678-90abcdef1234",
      "name": "Export to CSV",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [1450, 360],
      "credentials": {
        "postgres": {
          "id": "postgres-supabase",
          "name": "Supabase DB"
        }
      }
    },
    {
      "parameters": {
        "content": "No changes detected in the last 24 hours.",
        "options": {}
      },
      "id": "h8901234-def1-2345-6789-0abcdef12345",
      "name": "No Changes",
      "type": "n8n-nodes-base.markdown",
      "typeVersion": 1,
      "position": [1250, 420]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Check for price changes\nSELECT \n  p.sku,\n  p.name,\n  c.old_value as old_price,\n  c.new_value as new_price,\n  c.changed_at\nFROM stark_product_changes c\nJOIN stark_products p ON c.product_id = p.id\nWHERE c.field_name = 'price_numeric'\n  AND c.changed_at > NOW() - INTERVAL '24 hours'\nORDER BY c.changed_at DESC;",
        "options": {}
      },
      "id": "i9012345-ef12-3456-7890-abcdef123456",
      "name": "Check Price Changes",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [1650, 240],
      "credentials": {
        "postgres": {
          "id": "postgres-supabase",
          "name": "Supabase DB"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.length}}",
              "operation": "larger",
              "value2": 0
            }
          ]
        }
      },
      "id": "j0123456-f123-4567-890a-bcdef1234567",
      "name": "Price Changes?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1850, 240]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$credentials.webhook.alertUrl}}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "alert_type",
              "value": "price_change"
            },
            {
              "name": "products",
              "value": "={{JSON.stringify($json)}}"
            },
            {
              "name": "timestamp",
              "value": "={{$now.toISO()}}"
            }
          ]
        },
        "options": {}
      },
      "id": "k1234567-0123-4567-890a-bcdef12345678",
      "name": "Send Price Alert",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [2050, 180]
    }
  ],
  "connections": {
    "Daily at 2:30 AM": {
      "main": [
        [
          {
            "node": "Log Start",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Start": {
      "main": [
        [
          {
            "node": "Run Crawler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Run Crawler": {
      "main": [
        [
          {
            "node": "Get Statistics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Statistics": {
      "main": [
        [
          {
            "node": "Any Changes?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Any Changes?": {
      "main": [
        [
          {
            "node": "Get Changed Products",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Changes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Changed Products": {
      "main": [
        [
          {
            "node": "Send Slack Notification",
            "type": "main",
            "index": 0
          },
          {
            "node": "Export to CSV",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check Price Changes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Price Changes": {
      "main": [
        [
          {
            "node": "Price Changes?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Price Changes?": {
      "main": [
        [
          {
            "node": "Send Price Alert",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "maxExecutionDuration": 3600
  },
  "staticData": null,
  "meta": {
    "templateId": "stark-crawler-pipeline"
  },
  "pinData": {},
  "versionId": "1.0.0",
  "triggerCount": 1
}